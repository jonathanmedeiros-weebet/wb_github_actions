name: Deploy Front - Nuxt to S3 + CloudFront

on:
  # push:
  #   branches:
  #     - front   # ou branch que você usa para deploy
  workflow_dispatch: # permite rodar manualmente pelo Actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Debug Secrets (sem mostrar valor)
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "❌ AWS_ACCESS_KEY_ID está vazio"
          else
            echo "✅ AWS_ACCESS_KEY_ID está definido"
          fi
          
      # 1. Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.19.0

      # 3. Instalar dependências
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps

      # 4. Build e Generate do Nuxt
      - name: Build Nuxt
        run: |
          npm run build
          npm run generate

      # 5. Configurar credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 6. Deploy para S3
      - name: Sync to S3
        run: aws s3 sync .output/public s3://${{ secrets.S3_BUCKET }}/front.weebet.tech --delete

      # 7. Invalidar cache no CloudFront
      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.FRONT_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
